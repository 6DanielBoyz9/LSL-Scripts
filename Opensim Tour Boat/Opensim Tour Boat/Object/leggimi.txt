// :SHOW:
// :CATEGORY:Tour
// :NAME:Opensim Tour Boat
// :AUTHOR:Anonymous
// :KEYWORDS:
// :CREATED:2015-02-25 22:54:13
// :EDITED:2015-02-25  21:54:17
// :ID:1068
// :NUM:1718
// :REV:1
// :WORLD:Second Life
// :DESCRIPTION:
// A tour system using vehicle code for Opensim
// :CODE:
﻿http://www.endivatomic.eu/article/boat_engine

=================================================================
This program is free software; you can redistribute it and/or 
modify it. Additional Licenes may apply that prevent you from 
selling this code. You must leave any author credits and any 
headers intact in any script you use or publish.

Questo programma è libero; siete liberi di redistribuirlo e/o
modificarlo. E' fatto espresso divieto di vendere e/o rivendere
questo codice che deve rimanere Open Source.
Le intestazioni relative all'autore devono rimanere presenti 
negli script che usate o pubblicate.
=================================================================
Author:      thailow (thailow.mi@gmail.com)
created:     2014-02-02 
last modify: 2014-02-20
version:     1.00
target sys:  OpenSim

web page and english translation will soon be published on 
www.endivatomic.eu (not ready yet at present date)


ISTRUZIONI
=================================================================
Questo script permette di muovere una barca secondo un percorso
specificato atraverso una serie di coordinate salvate in una 
notecard.

Abbreviazioni utilizzate:
-------------------------
"BE"  => indica l'oggetto boat_engine
 
Posizionamento & Link:
----------------------
Collocare il BE nella vostra barca, le texture del BE indicano la
direzione della prua. Vi consigliamo di inserire il BE sul fondo 
della vs. barca, più o meno in centro.
ATTENZIONE: quando linkerete il BE al vs. natante fate in modo 
che risulti il prim principale (link number = 1).

Inserimento parametri (notecard param.config):
----------------------------------------------
Le linee che iniziano con il carattere # sono commenti e vengono 
escluse durante il caricamento. Anche le righe vuote vengono 
escluse, tuttavia per migliorare le prestazioni, una volta 
terminata la configurazione, sarebbe meglio rimuovere tutte le 
righe vuote ed i commenti. Tenete presente che per leggere ogni 
singola riga sono necessari circa 0.1 secondi, eliminare i 
commenti e righe vuote significa migliorare la velocità di 
caricamento dei parametri.

I parametri facoltativi sono presenti con il simbolo di commento
prima del nome, per impostare un valore diverso da quello 
predefinito, rimuovere il simbolo # ad inizio riga.  

I parametri sono tutti nel formato:     nome = valore 
non importano gli spazi prima o dopo il segno di =
Ogni riga può contenere un solo parametro.
Maiuscole &/o minuscole nel nome non fanno differenza. 

-----------
STARTPOS: posizione iniziale del natante, la stessa posizione cui 
la barca verrà inviata al termine del tour. 
Inserire le coordinate della posizione in formato vettore <X,Y,Z>
La Z può essere lasciata a 0, al caricamento verrà impostata a 
livello del mare.

esempio: 
startPos = <92,162,20>
-----------
STARTROT: rotazione iniziale del natante, la stessa rotazione cui 
la barca verrà impostata al termine del tour. 
I valori del vettore sono gli angoli in gradi <X,Y,Z>. 

esempio:    startRot = <0,0,0>

-----------
HOVERWATER: altezza del BE sul livello dell'acqua espresso in 
metri. Attenzione: trattasi dell'altezza del BE sul livello del
mare e non la mezzeria del natante. 

esempio:    hoverwater = 0,1
         
-----------
SPEED: velocità (o spinta) della barca. 

esempio:    speed = 2

-----------
PUSHTIME: ogni quanti secondi la barca riceve una spinta. Si 
consiglia di rimanere tra i 0.2 ed i 0.6 secondi

esempio:    pushtime = 0.3

-----------
DEBUG: attiva/disattiva i messaggi di debug inviati al 
proprietario del BE. Se uguale ad 1 i messaggi sono attivi, 
impostare a 0 per disabilitare i messaggi.

esempio:    debug = 1

Nota: una volta terminata la fase di posizionamento si consiglia
di impostare debug = 0. I messaggi tendono a rallentare 
l'esecuzione degli eventi rendendo il movimento del natante
a scatti.
 
-----------

Inserimento percorso (notecard route.config):
----------------------------------------------
Il notecard route.config contiene la sequenza delle posizioni che
il natante dovrà passare nel suo tour.
Ogni riga deve contenere un vettore di posizione <X,Y,Z>.
Il valore di Z può essere lasciato a 0, verrà impostato
automaticamante ad altezza del mare.

ATTENZIONE!!!!: BE usa le funzioni fisiche per il movimento del
natante, queste NON funzionano attraverso SIM diversi. 
Nell'impostare il vostro percorso state attenti a non superare 
mai i confini del SIM, altrimenti la vostra barca perderà il 
controllo e potrebbe trasferirsi di colpo in posizioni indefinite
(anche sott'acqua o nel cielo).   

esempio:
Vogliamo eseguire un tour partente da <100,100,0>

<100, 110, 0>
<110, 110, 0>
<110, 100, 0>
<100, 100, 0>

Considerazioni varie:
1)  BE usa la fisica quindi se durante il suo percorso incontra 
    degli ostacoli, questi possono bloccare o deviarne la corsa.
    Controllate che nessun prim del natante tocchi il "fondale"
    durante il tragitto, potrebbe incagliarsi.
2)  nei tratti lineari, per quanto lunghi, non serve inserire
    coordinate intermedie in modo da evitare righe inutili.
3)  data la rapidità di virata si consiglia di inserire posizioni
    che agevolino virate morbide. 
    
FUNZIONAMENTO UTENTE:
=================================================================
Quando un utente tocca la barca, dopo qualche decimo di secondo 
di attesa, questa parte ed esegue il tour in modalità fisica.
A tour terminato (raggiunta lultima posizione segnalata in 
route.config) il natante torna ad essere NON fisico e riprende
la posizione e rotazione impostati in startPos e startRot.

FUNZIONAMENTO OWNER:
=================================================================
Quando il proprietario tocca la barca compare un menu con le 
seguenti funzioni:  

START:      se la barca è ferma, inizia a muoversi.     

STOP:       se la barca è in movimento resetta alla posizione
            startPos, startRot e toglie il flag fisico.

LOAD_PARAM: ricarica i parametri presenti in param.config,
            utilizzarlo in caso di modifica del notecard.

LOAD_ROUTE: ricarica i parametri presenti in route.config,
            utilizzarlo in caso di modifica del notecard.

       
